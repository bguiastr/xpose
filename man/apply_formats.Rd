% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vars_set.R
\name{apply_formats}
\alias{apply_formats}
\title{Format numerical variables in data tables}
\usage{
apply_formats(xpdb, .problem, formats, quiet)
}
\arguments{
\item{xpdb}{An xpose database object.}

\item{.problem}{The $problem number to be used. By default returns 
the last estimation problem.}

\item{formats}{A data.frame with an expected structure defined in the Details
section}

\item{quiet}{Logical, if \code{FALSE} messages are printed to the console.}
}
\value{
An updated data object with the same dimension as the \code{.data}
argument.
}
\description{
This function applies SAS-like formats to the numerical variables
according to a user-defined table of format definitions. Formatting is
performed by transforming the variables into factors. Discrete numerical 
variables can become discrete character variables more suited for reporting 
purposes. Additionally, formats can be used to discretize continuous 
variables by defining ranges of values associated with specific formats.
}
\details{
Formats typically are intended to be applied to categorical variables (eg, sex)
to replace numerical values by character labels (eg, 0=Males, 1=Females).
However, formats can also be applied to continuous variables (eg, CrCL) to
coerce them into categorical variables by defining intervals (eg, >90=Normal
renal function).

Format data.frames have the following expected structure:
\describe{
 \item{VARIABLE}{The (case sensitive) name of the variable to apply this
 format to.}
 \item{START}{The start of the interval. If missing, -Inf is assumed.}
 \item{END}{The end of the interval (start and end can be identical when
 dealing with format for categorical variables). If missing, +Inf is
 assumed.}
 \item{EXCLS}{Whether the start value of the interval should be excluded.
 Can be set to 0/1 or FALSE/TRUE.}
 \item{EXCLE}{Whether the end value of the interval should be excluded.
 Can be set to 0/1 or FALSE/TRUE.}
 \item{LABEL}{The format label to be applied for value of VARIABLE within
 START and END}
 \item{ORDER}{Ordering index of the interval}
 }
 
 The complete definition of a variable format can and will typically span
 multiple rows of the format data.frames (eg, for sex, 2 rows will be
 required: one for the 0 value, and another one for the 1 value). Format
 data.frames can contain format for variables which do not exist in \code{.data}.
 
 Data formatting will not be performed if the format definition for a variable
 is invalid. A format definition will be deemed invalid if: \itemize{
 \item{formatting information is not provided for any variables included in
 the data,}
 \item{formatting information is not provided for all values included in the
 data,}
 \item{formatting information is provided for non-numeric variables,}
 \item{EXCLS, EXCLE, LABEL, and/or ORDER are missing,}
 \item{ranges defined by START and END overlaps, or}
 \item{LABEL and ORDER are not consistent.}
 }
 
 Note that while LABEL and ORDER must be consistent, several values (or
 ranges of values) of a variable can be set to the same LABEL and ORDER.
}
\examples{
fmts <- data.frame(
  variable = c("SEX", "SEX", "CLCR", "CLCR", "CLCR", "CLCR", "CLCR"),
  start = c(1L, 2L, 90L, 60L, 30L, 15L, NA),
  end = c(1L, 2L, NA, 90L, 60L, 30L, 15L), 
  excls = c(0L, 0L, 1L, 1L, 1L, 1L,  0L),
  excle = c(0L, 0L, 0L, 0L, 0L, 0L, 0L), 
  label = c("Male", "Female", "Normal", "Mild", "Moderate", "Severe", "End of disease"),
  order = c(1L, 2L, 1L, 2L, 3L, 4L, 5L)
)
fmts
xp2 <- apply_formats(xpdb_ex_pk, .problem = 1, fmts) 

}
